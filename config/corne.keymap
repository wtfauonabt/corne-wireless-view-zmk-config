/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
// Mouse settings

#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

// Mouse movements

#define U_MOUSE_MOVE_MAX 5000

#undef MOVE_UP
#undef MOVE_DOWN
#undef MOVE_LEFT
#undef MOVE_RIGHT

#define MOVE_UP MOVE_Y(-U_MOUSE_MOVE_MAX)
#define MOVE_DOWN MOVE_Y(U_MOUSE_MOVE_MAX)
#define MOVE_LEFT MOVE_X(-U_MOUSE_MOVE_MAX)
#define MOVE_RIGHT MOVE_X(U_MOUSE_MOVE_MAX)

&mmv {
    time-to-max-speed-ms = <1000>;             /* <--- How long time until max speed is reached (default: 500) */
};

// Scroll movements

#define U_MOUSE_SCROLL_MAX 100

#undef SCRL_UP
#undef SCRL_DOWN
#undef SCRL_LEFT
#undef SCRL_RIGHT

#define SCRL_UP MOVE_Y(-U_MOUSE_SCROLL_MAX)
#define SCRL_DOWN MOVE_Y(U_MOUSE_SCROLL_MAX)
#define SCRL_LEFT MOVE_X(-U_MOUSE_SCROLL_MAX)
#define SCRL_RIGHT MOVE_X(U_MOUSE_SCROLL_MAX)

&msc {
};

/ {
    macros {
        MAC_SNAP_LEFT: MAC_SNAP_LEFT {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LCTRL &kp CAPSLOCK &kp LEFT>;
            label = "MAC_SNAP_LEFT";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | ENT |   | SPC | RSE  | ALT |

            display-name = "Base";
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E     &kp R  &kp T      &kp Y      &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp LCTRL  &kp A  &kp S  &kp D     &kp F  &kp G      &kp H      &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C     &kp V  &kp B      &kp N      &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp ESC
                         &kp LGUI  &mo 1  &kp RET    &kp SPACE  &mo 2  &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |      |     |  7  |  8  |  9  |     |   |     |     |     |     |     |      |
            // |      |     |  4  |  5  |  6  |     |   |MLEFT|MDOWN| MUP |MRIGH|     |      |
            // |      |     |  1  |  2  |  3  |  0  |   |SCRLT|SCRDW|SCRUP|SCRRT|     |      |
            //                    | HYP |     |     |   | MB1 |     | MB2 |

            display-name = "Lower";
            bindings = <
&trans  &trans  &kp N7  &kp N8                &kp N9  &trans    &trans          &trans          &trans        &trans           &trans  &trans
&trans  &trans  &kp N4  &kp N5                &kp N6  &trans    &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &trans  &trans
&trans  &trans  &kp N1  &kp N2                &kp N3  &kp N0    &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &msc SCRL_RIGHT  &trans  &trans
                        &sk LS(LA(LC(LGUI)))  &trans  &trans    &mkp MB1        &trans          &mkp MB2
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |      |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | DEL |
            // |      |  -  |  =  |  [  |  ]  |  \  |   | LFT | DWN |  UP | RGT |     |  `  |
            // |      |  `  |     |     |     |     |   | HOM | PGD | PGU | END | "|" |  ~  |
            //                    | GUI |     |     |   |     |     | CAP |

            display-name = "Raise";
            bindings = <
&trans  &kp EXCL   &kp AT     &kp HASH      &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS       &kp KP_MULTIPLY  &kp LPAR   &kp RPAR  &kp DELETE
&trans  &kp MINUS  &kp EQUAL  &kp LBKT      &kp RBKT  &kp BSLH     &kp LEFT   &kp DOWN       &kp UP           &kp RIGHT  &trans    &kp GRAVE
&trans  &kp GRAVE  &trans     &trans        &trans    &trans       &kp HOME   &kp PAGE_DOWN  &kp PAGE_UP      &kp END    &kp PIPE  &kp TILDE
                              &kp LGUI      &trans    &trans       &trans     &trans         &sk CAPSLOCK
            >;
        };

        tri_layer {
            // -----------------------------------------------------------------------------------------
            // |      |     | F07 | F08 | F09 | F12 |   | BT0 | BT1 | BT2 | BT3 | BT4 | BTCLR |
            // |      |     | F04 | F05 | F06 | F11 |   | SHF | GUI | CTR | ALT |     |       |
            // | CAPS |     | F01 | F02 | F03 | F10 |   |     | ZMI | ZMO |     |     |       |
            //                    | HYP |     |     |   |     |     | CAP |  

            display-name = "Tri";
            bindings = <
&trans  &trans  &kp F7  &kp F8                &kp F9  &kp F12   &bt BT_SEL 0  &bt BT_SEL 1          &bt BT_SEL 2        &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR
&trans  &trans  &kp F4  &kp F5                &kp F6  &kp F11   &sk RSHFT     &sk RGUI              &sk RCTRL           &sk RALT      &trans        &trans
&trans  &trans  &kp F1  &kp F2                &kp F3  &kp F10   &trans        &kp C_AC_ZOOM_IN      &kp C_AC_ZOOM_OUT   &trans        &trans        &trans
                        &sk LS(LA(LC(LGUI)))  &trans  &trans    &trans        &trans                &sk CAPSLOCK
            >;

            label = "Tri";
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        conditional_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
